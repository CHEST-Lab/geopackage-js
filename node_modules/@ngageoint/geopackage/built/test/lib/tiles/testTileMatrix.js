"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var TileMatrixDao = require('../../../lib/tiles/matrix/tileMatrixDao').TileMatrixDao, TileMatrix = require('../../../lib/tiles/matrix/tileMatrix').TileMatrix, testSetup = require('../../fixtures/testSetup').default, should = require('chai').should(), path = require('path');
describe('Tile Matrix tests', function () {
    var geoPackage;
    var tileMatrixDao;
    var filename;
    beforeEach('should open the geopackage', function () {
        return __awaiter(this, void 0, void 0, function () {
            var riversfilename, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        riversfilename = path.join(__dirname, '..', '..', 'fixtures', 'rivers.gpkg');
                        return [4 /*yield*/, copyAndOpenGeopackage(riversfilename)];
                    case 1:
                        result = _a.sent();
                        filename = result.path;
                        geoPackage = result.geopackage;
                        tileMatrixDao = new TileMatrixDao(geoPackage);
                        return [2 /*return*/];
                }
            });
        });
    });
    afterEach('should close the geopackage', function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        geoPackage.close();
                        return [4 /*yield*/, testSetup.deleteGeoPackage(filename)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    });
    it('should get the tile matrixes', function () {
        var tileMatrices = tileMatrixDao.queryForAll();
        tileMatrices.should.have.property('length', 4);
    });
    it('should transform the tile matrix result to a TileMatrix', function () {
        var tileMatrices = tileMatrixDao.queryForAll();
        tileMatrices[0].should.have.property('table_name', 'TILESosmds');
        tileMatrices[0].should.have.property('zoom_level', 0);
        tileMatrices[0].should.have.property('matrix_width', 1);
        tileMatrices[0].should.have.property('matrix_width', 1);
        tileMatrices[0].should.have.property('tile_height', 256);
        tileMatrices[0].should.have.property('tile_width', 256);
        tileMatrices[0].should.have.property('pixel_x_size', 156543.03392804097);
        tileMatrices[0].should.have.property('pixel_y_size', 156543.033928041);
        var tileMatrix = tileMatrixDao.createObject();
        tileMatrixDao.populateObjectFromResult(tileMatrix, tileMatrices[0]);
        tileMatrix.should.have.property('matrix_width', 1);
        tileMatrix.should.have.property('matrix_height', 1);
        tileMatrix.should.have.property('zoom_level', 0);
        tileMatrix.should.have.property('table_name', 'TILESosmds');
        tileMatrix.should.have.property('tile_width', 256);
        tileMatrix.should.have.property('tile_height', 256);
        tileMatrix.should.have.property('pixel_x_size', 156543.03392804097);
        tileMatrix.should.have.property('pixel_y_size', 156543.033928041);
    });
    it('should get the Contents from a TileMatrix', function () {
        var tileMatrices = tileMatrixDao.queryForAll();
        var tileMatrix = tileMatrixDao.createObject();
        tileMatrixDao.populateObjectFromResult(tileMatrix, tileMatrices[0]);
        var contents = tileMatrixDao.getContents(tileMatrix);
        should.exist(contents);
        contents.should.have.property('table_name', 'TILESosmds');
        contents.should.have.property('data_type', 'tiles');
        contents.should.have.property('identifier', 'TILESosmds');
        contents.should.have.property('description', null);
        contents.should.have.property('last_change', '2015-12-04T15:28:53.871Z');
        contents.should.have.property('min_x', -180);
        contents.should.have.property('min_y', -85.0511287798066);
        contents.should.have.property('max_x', 180);
        contents.should.have.property('max_y', 85.0511287798066);
        contents.should.have.property('srs_id', 4326);
    });
    it('should get the TileMatrixSet from a TileMatrix', function () {
        var tileMatrices = tileMatrixDao.queryForAll();
        var tileMatrix = tileMatrixDao.createObject();
        tileMatrixDao.populateObjectFromResult(tileMatrix, tileMatrices[0]);
        var tileMatrixSet = tileMatrixDao.getTileMatrixSet(tileMatrix);
        should.exist(tileMatrixSet);
        tileMatrixSet.should.have.property('srs_id', 3857);
        tileMatrixSet.should.have.property('table_name', 'TILESosmds');
        tileMatrixSet.should.have.property('min_x', -20037508.342789244);
        tileMatrixSet.should.have.property('min_y', -20037508.342789244);
        tileMatrixSet.should.have.property('max_x', 20037508.342789244);
        tileMatrixSet.should.have.property('max_y', 20037508.342789244);
    });
});
//# sourceMappingURL=testTileMatrix.js.map