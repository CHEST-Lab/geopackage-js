var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var SpatialReferenceSystem = require('../../../../lib/core/srs/spatialReferenceSystem').SpatialReferenceSystem, should = require('chai').should(), path = require('path');
describe('SpatialReferenceSystem tests', function () {
    var geoPackage;
    beforeEach('should open the geopackage', function () {
        return __awaiter(this, void 0, void 0, function () {
            var filename;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        filename = path.join(__dirname, '..', '..', '..', 'fixtures', 'gdal_sample.gpkg');
                        return [4 /*yield*/, openGeoPackage(filename)];
                    case 1:
                        // @ts-ignore
                        geoPackage = (_a.sent()).geopackage;
                        return [2 /*return*/];
                }
            });
        });
    });
    afterEach('should close the geopackage', function () {
        geoPackage.close();
    });
    it('should get a 4326 projection', function () {
        var srs = new SpatialReferenceSystem();
        srs.organization = 'epsg';
        srs.organization_coordsys_id = 4326;
        var projection = srs.projection;
        should.exist(projection);
        // @ts-ignore
        projection.oProj.projName.should.be.equal('longlat');
    });
    it('should get a projection that is not 4326', function () {
        var srs = new SpatialReferenceSystem();
        srs.organization = 'EPSG';
        srs.organization_coordsys_id = 3857;
        var projection = srs.projection;
        should.exist(projection);
        // @ts-ignore
        projection.oProj.title.should.be.equal('WGS 84 / Pseudo-Mercator');
    });
    it('should get a projection from a definition', function () {
        var srs = new SpatialReferenceSystem();
        srs.definition = '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs';
        var projection = srs.projection;
        should.exist(projection);
        // @ts-ignore
        projection.oProj.projName.should.be.equal('merc');
    });
    it('should return null when the projection could not be determined', function () {
        var srs = new SpatialReferenceSystem();
        var projection = srs.projection;
        should.not.exist(projection);
    });
    it('should get a projection from a definition_12_063', function () {
        var srs = new SpatialReferenceSystem();
        srs.definition_12_063 = 'PROJCS["WGS 84 / Pseudo-Mercator",GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]],PROJECTION["Mercator_1SP"],PARAMETER["central_meridian",0],PARAMETER["scale_factor",1],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],EXTENSION["PROJ4","+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs"],AUTHORITY["EPSG","3857"]]';
        var projection = srs.projection;
        should.exist(projection);
        // @ts-ignore
        projection.oProj.projName.should.be.equal('merc');
    });
    it('should get the 4326 SRS', function () {
        var srs = geoPackage.spatialReferenceSystemDao.getBySrsId(4326);
        should.exist(srs);
        srs.should.have.property('srs_name');
        srs.should.have.property('srs_id');
        srs.should.have.property('organization');
        srs.should.have.property('organization_coordsys_id', 4326);
        srs.should.have.property('definition');
    });
    it('should get the 0 SRS', function () {
        var srs = geoPackage.spatialReferenceSystemDao.getBySrsId(0);
        should.exist(srs);
        srs.should.have.property('srs_name');
        srs.should.have.property('srs_id');
        srs.should.have.property('organization');
        srs.should.have.property('organization_coordsys_id', 0);
        srs.should.have.property('definition');
    });
    it('should fail to get an SRS that does not exist', function () {
        var srs = geoPackage.spatialReferenceSystemDao.getBySrsId(-2);
        should.not.exist(srs);
    });
    it('should get all defined SRS', function () {
        var srs = geoPackage.spatialReferenceSystemDao.queryForAll();
        should.exist(srs);
        srs.should.have.property('length', 4);
    });
    it('should get the 4326 SRS', function () {
        var srs = geoPackage.spatialReferenceSystemDao.getBySrsId(4326);
        should.exist(srs);
        var srsProjection = srs.projection;
        should.exist(srsProjection);
        var projection = geoPackage.spatialReferenceSystemDao.getProjection(srs);
        should.exist(projection);
    });
});
//# sourceMappingURL=testSpatialReferenceSystem.js.map