"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require("../.");
var geopackageUtils_1 = __importDefault(require("./geopackageUtils"));
// var GeoPackageUtils = require('./geopackageUtils');
var path = require('path'), fs = require('fs-extra');
describe('Create GeoPackage samples', function () {
    describe('Create a GeoPackage for OGC Certification', function () {
        var testGeoPackage = path.join(__dirname, 'fixtures', 'tmp', 'js-example.gpkg');
        var geopackage;
        before(function (done) {
            // remove the created geopackage
            if (typeof (process) !== 'undefined' && process.version) {
                fs.unlink(testGeoPackage, function () {
                    fs.mkdir(path.dirname(testGeoPackage), function () {
                        fs.open(testGeoPackage, 'w', done);
                    });
                });
            }
            else {
                done();
            }
        });
        it('output a 1.2 compliant GeoPackage', function () {
            this.timeout(60000);
            console.log('Create GeoPackage');
            return _1.GeoPackage.create(testGeoPackage)
                .then(function (gp) {
                console.log('Created GeoPackage');
                return geopackage = gp;
            })
                .then(geopackageUtils_1.default.createCRSWKTExtension)
                .then(geopackageUtils_1.default.createFeatures)
                .then(geopackageUtils_1.default.createSchemaExtension)
                .then(geopackageUtils_1.default.createGeometryIndexExtension)
                .then(geopackageUtils_1.default.createFeatureTileLinkExtension)
                .then(geopackageUtils_1.default.createNonLinearGeometryTypesExtension)
                .then(geopackageUtils_1.default.createRTreeSpatialIndexExtension)
                .then(geopackageUtils_1.default.createRelatedTablesMediaExtension)
                .then(geopackageUtils_1.default.createRelatedTablesFeaturesExtension)
                .then(geopackageUtils_1.default.createTiles)
                .then(geopackageUtils_1.default.createWebPExtension)
                .then(geopackageUtils_1.default.createAttributes)
                .then(geopackageUtils_1.default.createRelatedTablesSimpleAttributesExtension)
                .then(geopackageUtils_1.default.createMetadataExtension)
                .then(geopackageUtils_1.default.createCoverageDataExtension)
                .then(geopackageUtils_1.default.createPropertiesExtension)
                .then(function () {
                geopackage.close();
            })
                .catch(function (error) {
                console.log('error', error);
                false.should.be.equal(true);
            });
        });
    });
    describe('Create a GeoPackage with an attributes table', function () {
        var testGeoPackage = path.join(__dirname, 'fixtures', 'tmp', 'attributes.gpkg');
        var geopackage;
        before(function (done) {
            // remove the created geopackage
            if (typeof (process) !== 'undefined' && process.version) {
                fs.unlink(testGeoPackage, function () {
                    fs.mkdir(path.dirname(testGeoPackage), function () {
                        fs.open(testGeoPackage, 'w', done);
                    });
                });
            }
            else {
                done();
            }
        });
        it('output an attributes GeoPackage', function () {
            this.timeout(60000);
            console.log('Create GeoPackage');
            return _1.GeoPackage.create(testGeoPackage)
                .then(function (gp) {
                console.log('Created GeoPackage');
                return geopackage = gp;
            })
                .then(geopackageUtils_1.default.createCRSWKTExtension)
                .then(geopackageUtils_1.default.createAttributes)
                .then(function () {
                geopackage.close();
            })
                .catch(function (error) {
                console.log('error', error);
                false.should.be.equal(true);
            });
        });
    });
});
//# sourceMappingURL=testGeoPackageSamples.js.map